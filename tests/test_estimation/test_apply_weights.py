"""Tests for function in apply_weights"""
import pandas as pd
import src.estimation.apply_weights as appw
from pandas._testing import assert_frame_equal


def test_apply_weights():
    """Test for apply_weights"""


    # Create config dictionary
    config = {"estimation": {"numeric_cols": ["701", "702", "703"]},
              "breakdowns": {"211": ["202", "203", "204"],
                             "305": ["302", "303", "304"],
                             "emp_total": ["emp_researcher", "emp_technician", "emp_other"],
                             "headcount_total": ["headcount_res_m", "headcount_res_f", "headcount_tec_m",
                                                 "headcount_tec_f", "headcount_oth_m", "headcount_oth_f"]}
}

    # Create an input dataframe for the test
    input_columns = [
        "reference",
        "701",
        "702",
        "703",
        "211",
        "202",
        "203",
        "204",
        "305",
        "302",
        "303",
        "304",
        "emp_total",
        "emp_researcher",
        "emp_technician",
        "emp_other",
        "headcount_total",
        "headcount_tot_m",
        "headcount_tot_f",
        "headcount_res_m",
        "headcount_res_f",
        "headcount_tec_m",
        "headcount_tec_f",
        "headcount_oth_m",
        "headcount_oth_f",
        "a_weight",
    ]

    data = [
        ["1", 1.045777935, 1.5968726069999999, 0.254832457, 1501.531337, 500.8443931, 499.9360421, 500.75090159999996, 29.94531777, 9.602584921, 9.653985014, 10.68874783, 6.486029315, 2.533542905, 2.308242877, 1.644243533, 35.51377752, 17.61682923, 17.89694829, 5.244178863999999, 5.02230081, 5.935326625, 6.091749861, 6.437323742, 6.782897622, 2.5],
        ["2", 1.157775387, 0.484444627, 0.660795649, 1501.150221, 499.7596024, 501.6974991, 499.6931194, 31.82855842, 10.97246129, 10.18047899, 10.67561814, 9.256449084, 3.6957475310000003, 3.053765916, 2.5069356369999998, 31.33316803, 15.62878371, 15.70438432, 5.073926003, 5.038220378, 5.221775736000001, 5.259157105, 5.333081971, 5.407006837000001, 6.0],
        ["3", 0.245754563, 0.053153144000000006, 0.24898895399999998, 1499.305683, 499.0019342, 499.56546389999994, 500.7382846, 31.09016923, 10.200109300000001, 11.24314965, 9.646910282999999, 11.18471882, 5.38607754, 2.750773441, 3.047867843, 31.90945798, 16.1902705, 15.71918748, 5.853938218, 5.7991434360000005, 5.376310254, 5.198836005, 4.960022024, 4.721208042, 7.0],
        ["4", 0.091581569, 1.29306045, 2.222550393, 1497.3095039999998, 500.2853801, 498.26926339999994, 498.7548608, 31.49017978, 10.80040763, 9.527649379, 11.16212277, 10.22765186, 3.03791456, 3.8605661610000004, 3.3291711439999996, 19.46143478, 8.467779404, 10.99365538, 2.809718479, 4.845279035, 2.583872755, 3.187111032, 3.07418817, 2.961265308, 14.0],
        ["5", 0.48547690299999996, 0.614760438, 1.620874173, 1498.722371, 500.4694436000001, 500.44068089999996, 497.81224689999993, 30.44836156, 10.06357482, 10.79756546, 9.587221282, 8.654173735, 5.294000296, 2.062538336, 1.297635102, 38.73744625, 16.0302036, 22.70724266, 2.321065166, 5.567475808999999, 5.139255008, 7.160788502000001, 8.569883423, 9.978978344, 2.0],
        ["6", 0.216682565, 0.420119477, 0.077609457, 1497.974779, 499.146944, 498.292069, 500.5357663, 29.76051868, 9.465821929, 9.133324308999999, 11.16137244, 11.35927018, 5.351916919, 2.9535873489999998, 3.053765916, 29.89478397, 14.88709836, 15.00768561, 4.753219981, 4.7014481319999994, 4.98075964, 5.039348909, 5.153118738, 5.266888568, 1.0],
        ["7", 0.256570729, 1.635266926, 0.877078037, 1497.8444539999998, 499.91778619999997, 499.7594455, 498.16722269999997, 28.24588485, 9.099873094, 9.312124146, 9.833887614, 11.20396942, 4.079138201, 5.134802344, 1.990028871, 27.81728548, 15.003295399999999, 12.81399007, 5.437817107000001, 3.9774642019999997, 5.14721536, 4.563563809, 4.4182629360000005, 4.2729620619999995, 6.3],
        ["8", 0.733170964, 0.111266445, 0.506586275, 1500.596397, 501.64230189999995, 501.381718, 497.5723767, 28.169746500000002, 9.444435161, 9.593212578, 9.132098765, 10.80790153, 3.316276783, 4.322564458, 3.169060286, 34.81934705, 15.87769138, 18.94165568, 5.164251333, 7.552951628, 5.01908802, 5.766933681, 5.694352025, 5.621770369, 8.1],
        ["9", 2.134056558, 0.31692025, 1.3120006770000001, 1498.986525, 501.01687419999996, 499.2999597, 498.66969119999993, 31.76279059, 10.04786784, 10.48995616, 11.22496658, 8.855932629, 4.065679953, 2.443454044, 2.346798631, 33.13416081, 16.35181191, 16.78234889, 5.2931165, 5.529155386, 5.432098658999999, 5.557105674, 5.6265967539999995, 5.696087832999999, 1.0],
        ["10", 0.678504648, 0.35838638700000003, 0.569093572, 1498.674708, 500.2971126, 500.64281950000003, 497.7347761, 30.178638399999997, 9.173285232000001, 11.11531108, 9.890042091, 10.35101118, 3.143504622, 3.1301464180000003, 4.077360139, 31.77757215, 15.58851962, 16.18905253, 4.29044634, 4.129644266000001, 5.268369149, 5.540742728, 6.029704132000001, 6.518665537, 9.0],
    ]

    input_df = pd.DataFrame(data=data, columns=input_columns)

    # Create an expected dataframe for the test
    exp_output_columns = [
        "reference",
        "701",
        "702",
        "703",
        "211",
        "202",
        "203",
        "204",
        "305",
        "302",
        "303",
        "304",
        "emp_total",
        "emp_researcher",
        "emp_technician",
        "emp_other",
        "headcount_total",
        "headcount_tot_m",
        "headcount_tot_f",
        "headcount_res_m",
        "headcount_res_f",
        "headcount_tec_m",
        "headcount_tec_f",
        "headcount_oth_m",
        "headcount_oth_f",
        "a_weight",
        "701_estimated",
        "702_estimated",
        "703_estimated",
        "211_estimated",
        "202_estimated",
        "203_estimated",
        "204_estimated",
        "305_estimated",
        "302_estimated",
        "303_estimated",
        "304_estimated",
        "emp_total_estimated",
        "emp_researcher_estimated",
        "emp_technician_estimated",
        "emp_other_estimated",
        "headcount_total_estimated",
        "headcount_tot_m_estimated",
        "headcount_tot_f_estimated",
        "headcount_res_m_estimated",
        "headcount_res_f_estimated",
        "headcount_tec_m_estimated",
        "headcount_tec_f_estimated",
        "headcount_oth_m_estimated",
        "headcount_oth_f_estimated",
    ]

    data = [
        ["1", 1.045777935, 1.5968726069999999, 0.254832457, 1501.531337, 500.8443931, 499.9360421, 500.75090159999996, 29.94531777, 9.602584921, 9.653985014, 10.68874783, 6.486029315, 2.533542905, 2.308242877, 1.644243533, 35.5, 17.6, 17.9, 5.2, 5.0, 5.9, 6.1, 6.4, 6.8, 2.5, 2.6144, 3.9922, 0.6371, 3753.8283, 1252.111, 1249.8401, 1251.8773, 74.8633, 24.0065, 24.135, 26.7219, 16.2151, 6.3339, 5.7706, 4.1106, 90.0, 44.0, 44.7, 12.5, 12.5, 15.0, 15.0, 15.0, 17.5],
        ["2", 1.157775387, 0.484444627, 0.660795649, 1501.150221, 499.7596024, 501.6974991, 499.6931194, 31.82855842, 10.97246129, 10.18047899, 10.67561814, 9.256449084, 3.6957475310000003, 3.053765916, 2.5069356369999998, 31.3, 15.6, 15.7, 5.1, 5.0, 5.2, 5.3, 5.3, 5.4, 6.0, 6.9467, 2.9067, 3.9648, 9006.9013, 2998.5576, 3010.185, 2998.1587, 190.9714, 65.8348, 61.0829, 64.0537, 55.5387, 22.1745, 18.3226, 15.0416, 186.0, 93.8, 94.2, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0],
        ["3", 0.245754563, 0.053153144000000006, 0.24898895399999998, 1499.305683, 499.0019342, 499.56546389999994, 500.7382846, 31.09016923, 10.200109300000001, 11.24314965, 9.646910282999999, 11.18471882, 5.38607754, 2.750773441, 3.047867843, 31.9, 16.2, 15.7, 5.9, 5.8, 5.4, 5.2, 5.0, 4.7, 7.0, 1.7203, 0.3721, 1.7429, 10495.1398, 3493.0135, 3496.9582, 3505.1679999999997, 217.6312, 71.4008, 78.702, 67.5284, 78.293, 37.7025, 19.2554, 21.3351, 224.0, 113.3, 110.0, 42.0, 42.0, 35.0, 35.0, 35.0, 35.0],
        ["4", 0.091581569, 1.29306045, 2.222550393, 1497.3095039999998, 500.2853801, 498.26926339999994, 498.7548608, 31.49017978, 10.80040763, 9.527649379, 11.16212277, 10.22765186, 3.03791456, 3.8605661610000004, 3.3291711439999996, 19.5, 8.5, 11.0, 2.8, 4.8, 2.6, 3.2, 3.1, 3.0, 14.0, 1.2821, 18.1028, 31.1157, 20962.3331, 7003.9953, 6975.7697, 6982.5681, 440.8625, 151.2057, 133.3871, 156.2697, 143.1871, 42.5308, 54.0479, 46.6084, 266.0, 118.5, 153.9, 42.0, 70.0, 42.0, 42.0, 42.0, 42.0],
        ["5", 0.48547690299999996, 0.614760438, 1.620874173, 1498.722371, 500.4694436000001, 500.44068089999996, 497.81224689999993, 30.44836156, 10.06357482, 10.79756546, 9.587221282, 8.654173735, 5.294000296, 2.062538336, 1.297635102, 38.7, 16.0, 22.7, 2.3, 5.6, 5.1, 7.2, 8.6, 10.0, 2.0, 0.971, 1.2295, 3.2417, 2997.4447, 1000.9389, 1000.8814, 995.6245, 60.8967, 20.1271, 21.5951, 19.1744, 17.3083, 10.588, 4.1251, 2.5953, 78.0, 32.1, 45.4, 4.0, 12.0, 10.0, 14.0, 18.0, 20.0],
        ["6", 0.216682565, 0.420119477, 0.077609457, 1497.974779, 499.146944, 498.292069, 500.5357663, 29.76051868, 9.465821929, 9.133324308999999, 11.16137244, 11.35927018, 5.351916919, 2.9535873489999998, 3.053765916, 29.9, 14.9, 15.0, 4.8, 4.7, 5.0, 5.0, 5.2, 5.3, 1.0, 0.2167, 0.4201, 0.0776, 1497.9748, 499.1469, 498.2921, 500.5358, 29.7605, 9.4658, 9.1333, 11.1614, 11.3593, 5.3519, 2.9536, 3.0538, 30.0, 14.9, 15.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0],
        ["7", 0.256570729, 1.635266926, 0.877078037, 1497.8444539999998, 499.91778619999997, 499.7594455, 498.16722269999997, 28.24588485, 9.099873094, 9.312124146, 9.833887614, 11.20396942, 4.079138201, 5.134802344, 1.990028871, 27.8, 15.0, 12.8, 5.4, 4.0, 5.1, 4.6, 4.4, 4.3, 6.3, 1.6164, 10.3022, 5.5256, 9436.4201, 3149.4821, 3148.4845, 3138.4535, 177.9491, 57.3292, 58.6664, 61.9535, 70.585, 25.6986, 32.3493, 12.5372, 176.4, 94.5, 80.7, 31.5, 25.2, 31.5, 31.5, 25.2, 25.2],
        ["8", 0.733170964, 0.111266445, 0.506586275, 1500.596397, 501.64230189999995, 501.381718, 497.5723767, 28.169746500000002, 9.444435161, 9.593212578, 9.132098765, 10.80790153, 3.316276783, 4.322564458, 3.169060286, 34.8, 15.9, 18.9, 5.2, 7.6, 5.0, 5.8, 5.7, 5.6, 8.1, 5.9387, 0.9013, 4.1033, 12154.8308, 4063.3026, 4061.1919, 4030.3363, 228.1749, 76.4999, 77.705, 73.97, 87.544, 26.8618, 35.0128, 25.6694, 283.5, 128.6, 153.4, 40.5, 64.8, 40.5, 48.6, 48.6, 48.6],
        ["9", 2.134056558, 0.31692025, 1.3120006770000001, 1498.986525, 501.01687419999996, 499.2999597, 498.66969119999993, 31.76279059, 10.04786784, 10.48995616, 11.22496658, 8.855932629, 4.065679953, 2.443454044, 2.346798631, 33.1, 16.4, 16.8, 5.3, 5.5, 5.4, 5.6, 5.6, 5.7, 1.0, 2.1341, 0.3169, 1.3119999999999998, 1498.9865, 501.0169, 499.3, 498.6697, 31.7628, 10.0479, 10.49, 11.225, 8.8559, 4.0657, 2.4435, 2.3468, 33.0, 16.4, 16.8, 5.0, 6.0, 5.0, 6.0, 6.0, 6.0],
        ["10", 0.678504648, 0.35838638700000003, 0.569093572, 1498.674708, 500.2971126, 500.64281950000003, 497.7347761, 30.178638399999997, 9.173285232000001, 11.11531108, 9.890042091, 10.35101118, 3.143504622, 3.1301464180000003, 4.077360139, 31.8, 15.6, 16.2, 4.3, 4.1, 5.3, 5.5, 6.0, 6.5, 9.0, 6.1065, 3.2255, 5.1218, 13488.0724, 4502.674, 4505.7854, 4479.613, 271.6077, 82.5596, 100.0378, 89.0104, 93.1591, 28.2915, 28.1713, 36.6962, 288.0, 140.3, 145.7, 36.0, 36.0, 45.0, 54.0, 54.0, 63.0],
    ]

    exp_output_df = pd.DataFrame(data=data, columns=exp_output_columns)

    result_df, cols_list = appw.apply_weights(input_df, config, 4)
    print(result_df)
    assert_frame_equal(result_df, exp_output_df, check_like=True)
